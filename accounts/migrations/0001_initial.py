# Generated by Django 2.2 on 2019-06-09 11:11

from django.conf import settings
import django.contrib.auth.models
import django.contrib.auth.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0011_update_proxy_permissions'),
    ]

    operations = [
        migrations.CreateModel(
            name='MyUser',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('username', models.CharField(error_messages={'unique': 'A user with that username already exists.'}, help_text='Required. 150 characters or fewer. Letters, digits and @/./+/-/_ only.', max_length=150, unique=True, validators=[django.contrib.auth.validators.UnicodeUsernameValidator()], verbose_name='username')),
                ('first_name', models.CharField(blank=True, max_length=30, verbose_name='first name')),
                ('last_name', models.CharField(blank=True, max_length=150, verbose_name='last name')),
                ('email', models.EmailField(max_length=254, unique=True, verbose_name='email address')),
                ('is_staff', models.BooleanField(default=False, help_text='Designates whether the user can log into this admin site.', verbose_name='staff status')),
                ('is_active', models.BooleanField(default=True, help_text='Designates whether this user should be treated as active. Unselect this instead of deleting accounts.', verbose_name='active')),
                ('date_joined', models.DateTimeField(default=django.utils.timezone.now, verbose_name='date joined')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            managers=[
                ('objects', django.contrib.auth.models.UserManager()),
            ],
        ),
        migrations.CreateModel(
            name='UserStateModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('state_description', models.CharField(max_length=50, verbose_name='Stan użytkownika')),
            ],
        ),
        migrations.CreateModel(
            name='WorkHoursModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(max_length=200, verbose_name='Opis zmiany')),
                ('rate_of_pay', models.DecimalField(decimal_places=2, default=1.0, max_digits=3, verbose_name='Stawka płacy')),
            ],
        ),
        migrations.CreateModel(
            name='UserProfileInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('pesel', models.CharField(max_length=11, verbose_name='PESEL')),
                ('street', models.CharField(max_length=200, verbose_name='Ulica')),
                ('city', models.CharField(max_length=200, verbose_name='Miasto')),
                ('phone', models.CharField(max_length=20, verbose_name='Telefon')),
                ('post_code', models.CharField(max_length=6, verbose_name='Kod pocztowy')),
                ('house_number', models.CharField(max_length=20, verbose_name='Numer domu')),
                ('image', models.ImageField(blank=True, default=None, null=True, upload_to='avatars/')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, related_name='user_profile', to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
                ('user_manager', models.ForeignKey(blank=True, null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_manager', to=settings.AUTH_USER_MODEL, verbose_name='Kierownik')),
                ('user_state', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_state', to='accounts.UserStateModel', verbose_name='Stan użytkownika')),
                ('user_work_hours', models.ForeignKey(null=True, on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_work_hours', to='accounts.WorkHoursModel', verbose_name='Godziny pracy')),
            ],
        ),
        migrations.CreateModel(
            name='UserAccessModel',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('rfid', models.CharField(max_length=200, verbose_name='rfid')),
                ('comments', models.CharField(blank=True, max_length=500, null=True, verbose_name='uwagi')),
                ('user', models.OneToOneField(on_delete=django.db.models.deletion.DO_NOTHING, related_name='user_access', to=settings.AUTH_USER_MODEL, verbose_name='Użytkownik')),
            ],
        ),
    ]
